// Generated by LiveScript 1.4.0
(function(){
  var configDefaults, configValidate, compile, getExtensions;
  configDefaults = function(){
    return {
      livereact: {
        extensions: ['ls', 'lsx'],
        options: {
          bare: true
        }
      }
    };
  };
  configValidate = function(config, validators){
    var errors;
    errors = [];
    if (validators.ifExistsIsObject(errors, "livereact config", config.livereact)) {
      if (validators.isArrayOfStringsMustExist(errors, 'livereact.extensions', config.livereact.extensions)) {
        if (config.livereact.extensions.length === 0) {
          errors.push("livereact.extensions cannot be an empty array");
        }
      }
    }
    return errors;
  };
  compile = function(mimosaConfig, file, cb){
    var code, options, coffeeReact, livescript, output, error;
    code = file.inputFileText;
    options = mimosaConfig.livereact.options;
    coffeeReact = require('coffee-react-transform');
    livescript = require('livescript');
    output = (function(){
      try {
        return livescript.compile(coffeeReact(code), options);
      } catch (e$) {
        return error = e$.error, e$;
      }
    }());
    return cb(error, output);
  };
  getExtensions = function(mimosaConfig){
    return mimosaConfig.lsx.extensions;
  };
  module.exports = {
    name: 'livereact',
    compilerType: 'javascript',
    extensions: getExtensions,
    compile: compile,
    defaults: configDefaults,
    validate: configValidate
  };
}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvdGFrYXRhL0xpYnJhcnkvTW9iaWxlIERvY3VtZW50cy9jb21+YXBwbGV+Q2xvdWREb2NzL0dpdEh1Yi9ucG0vbWltb3NhLWxpdmVyZWFjdC9sYWIvaW5kZXgubHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0VBQUEsY0FBZ0IsQ0FBQSxDQUFBLENBQUUsUUFBQSxDQUFBO1dBQ2Q7TUFBQSxXQUNJO1FBQUEsWUFBWSxDQUFFLE1BQUssS0FBUDtRQUNaLFNBQ0k7VUFBQSxNQUFNO1FBQU47TUFGSjtJQURKOztFQU1KLGNBQWdCLENBQUEsQ0FBQSxDQUFFLFFBQUEsQ0FBQSxNQUFBLEVBQUEsVUFBQTs7SUFDZCxNQUFPLENBQUEsQ0FBQSxDQUFFO0lBRVQsSUFBSSxVQUFVLENBQUMsZ0JBQWYsQ0FBZ0MsTUFBaEMsRUFBMEQsa0JBQTFELEVBQTRELE1BQU0sQ0FBQyxTQUFuQyxDQUFoQztNQUVJLElBQUcsVUFBVSxDQUFDLHlCQUFkLENBQXdDLE1BQXhDLEVBQWdELHNCQUFoRCxFQUF1RSxNQUFNLENBQUMsU0FBUyxDQUFDLFVBQWhELENBQXhDO1FBRUksSUFBRyxNQUFNLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxNQUFPLENBQUEsR0FBQSxDQUFHLENBQXpDO1VBQ0ksTUFBTSxDQUFDLEtBQW9ELCtDQUFBOzs7O0lBRXZFLE1BQUEsQ0FBTyxNQUFQOztFQUdKLE9BQVEsQ0FBQSxDQUFBLENBQUUsUUFBQSxDQUFBLFlBQUEsRUFBQSxJQUFBLEVBQUEsRUFBQTs7SUFDQSxJQUFhLENBQUEsQ0FBQSxDQUFFLElBQUksQ0FBQztJQUNwQixPQUFhLENBQUEsQ0FBQSxDQUFFLFlBQVksQ0FBQyxTQUFTLENBQUM7SUFDdEMsV0FBYSxDQUFBLENBQUEsQ0FBRSxRQUFRLHdCQUFBO0lBQ3ZCLFVBQWEsQ0FBQSxDQUFBLENBQUUsUUFBUSxZQUFBO0lBRTdCLE1BQU8sQ0FBQSxDQUFBO01BQUU7ZUFDTCxVQUFVLENBQUMsUUFBVSxZQUFhLElBQUEsR0FBUSxPQUF2QjtPQUN2QjtlQUFPLFdBQUE7OztXQUVQLEdBQUcsT0FBTyxNQUFQOztFQUdQLGFBQWUsQ0FBQSxDQUFBLENBQUUsUUFBQSxDQUFBLFlBQUE7V0FDYixZQUFZLENBQUMsR0FBRyxDQUFDOztFQUdyQixNQUFNLENBQUMsT0FBUSxDQUFBLENBQUEsQ0FDWDtJQUFBLE1BQWM7SUFDZCxjQUFjO0lBQ2QsWUFBYztJQUNkLFNBQWM7SUFDZCxVQUFjO0lBQ2QsVUFBYztFQUxkIiwic291cmNlc0NvbnRlbnQiOlsiY29uZmlnLWRlZmF1bHRzID0gLT5cbiAgICBsaXZlcmVhY3Q6XG4gICAgICAgIGV4dGVuc2lvbnM6IFsgXFxscywgXFxsc3ggXVxuICAgICAgICBvcHRpb25zOlxuICAgICAgICAgICAgYmFyZTogdHJ1ZVxuXG5cbmNvbmZpZy12YWxpZGF0ZSA9IChjb25maWcsIHZhbGlkYXRvcnMpIC0+XG4gICAgZXJyb3JzID0gW11cblxuICAgIGlmICB2YWxpZGF0b3JzLmlmRXhpc3RzSXNPYmplY3QgZXJyb3JzLCBcImxpdmVyZWFjdCBjb25maWdcIiwgY29uZmlnLmxpdmVyZWFjdFxuXG4gICAgICAgIGlmIHZhbGlkYXRvcnMuaXNBcnJheU9mU3RyaW5nc011c3RFeGlzdCBlcnJvcnMsIFxcbGl2ZXJlYWN0LmV4dGVuc2lvbnMsIGNvbmZpZy5saXZlcmVhY3QuZXh0ZW5zaW9uc1xuXG4gICAgICAgICAgICBpZiBjb25maWcubGl2ZXJlYWN0LmV4dGVuc2lvbnMubGVuZ3RoIGlzIDBcbiAgICAgICAgICAgICAgICBlcnJvcnMucHVzaCBcImxpdmVyZWFjdC5leHRlbnNpb25zIGNhbm5vdCBiZSBhbiBlbXB0eSBhcnJheVwiXG5cbiAgICByZXR1cm4gZXJyb3JzXG5cblxuY29tcGlsZSA9ICggbWltb3NhQ29uZmlnLCBmaWxlLCBjYiApIC0+XG4gICAgY29uc3QgY29kZSAgICAgICAgID0gZmlsZS5pbnB1dEZpbGVUZXh0XG4gICAgICAgICAgb3B0aW9ucyAgICAgID0gbWltb3NhQ29uZmlnLmxpdmVyZWFjdC5vcHRpb25zXG4gICAgICAgICAgY29mZmVlLXJlYWN0ID0gcmVxdWlyZSBcXGNvZmZlZS1yZWFjdC10cmFuc2Zvcm1cbiAgICAgICAgICBsaXZlc2NyaXB0ICAgPSByZXF1aXJlIFxcbGl2ZXNjcmlwdFxuXG4gICAgb3V0cHV0ID0gdHJ5XG4gICAgICAgIGxpdmVzY3JpcHQuY29tcGlsZSAoIGNvZmZlZS1yZWFjdCBjb2RlICksIG9wdGlvbnNcbiAgICBjYXRjaCB7ZXJyb3J9XG5cbiAgICBjYiBlcnJvciwgb3V0cHV0XG5cblxuZ2V0RXh0ZW5zaW9ucyAgPSAoIG1pbW9zYUNvbmZpZyApIC0+XG4gICAgbWltb3NhQ29uZmlnLmxzeC5leHRlbnNpb25zXG5cblxubW9kdWxlLmV4cG9ydHMgPVxuICAgIG5hbWU6ICAgICAgICAgXFxsaXZlcmVhY3RcbiAgICBjb21waWxlclR5cGU6IFxcamF2YXNjcmlwdFxuICAgIGV4dGVuc2lvbnM6ICAgZ2V0RXh0ZW5zaW9uc1xuICAgIGNvbXBpbGU6ICAgICAgY29tcGlsZVxuICAgIGRlZmF1bHRzOiAgICAgY29uZmlnLWRlZmF1bHRzXG4gICAgdmFsaWRhdGU6ICAgICBjb25maWctdmFsaWRhdGVcbiJdfQ==
